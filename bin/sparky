#!/usr/bin/env ruby
# 
# TODO! This, along with switchy, needs to be made into a rubygem!
# Others may have difficulty using this in a portable fashion without
# a /Users/dbrady folder, for example...

def show_run
#  system "switchy 1 0 2 1 3 1 4 1"
  system "switchy 1 1 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 1"
end

def show_fail
  system "switchy 1 0 2 1 3 0 4 0 5 0 6 0 7 0 8 0 9 1 10 0"
end

def show_pending
  system "switchy 1 0 2 0 3 1 4 0 5 0 6 0 7 0 8 1 9 0 10 0"
end

def show_pass
  system "switchy 1 0 2 0 3 0 4 1 5 1 6 1 7 1 8 0 9 0 10 0"
end

def show_reset
  system "switchy 1 0 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 10 0"
end

case ARGV[0].downcase
when "reset" then show_reset
when "pending" then show_pending
when "fail" then show_fail
when "pass" then show_pass
when "run" then show_run
when "test" then show_test
when "spec"
  lib_path = File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib', 'sparky_progress_formatter.rb'))
  args = ARGV[1..-1].dup.map {|a| '"' + a.gsub(/"/, '\"') + '"' } * ' '
  cmd = "spec --require #{lib_path} --format Spec::Runner::Formatter::SparkyProgressFormatter #{args}"
  system(cmd)
else
  # TODO: If spec or rake spec:*, bind formatter
  # TODO: If autospec, bind formatter
  show_run

  cmd = ARGV.map {|a| '"' + a.gsub(/"/, '\"') + '"' } * ' '

  if system(cmd)
    show_pass
  else
    show_fail
  end
end
